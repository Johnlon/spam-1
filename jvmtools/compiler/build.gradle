
//project.buildDir=System.getProperty("java.io.tmpdir") + File.separator + "gradlebuild" + File.separator + project.name

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'com.github.johnrengelman.shadow'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

println("DIR " + project.buildDir)

dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    implementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'

    implementation 'org.scala-lang:scala-library:2.13.3'

    implementation group: "org.scala-lang.modules", name: "scala-parser-combinators_2.13", version: "1.1.2"

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.32'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'
    implementation group: 'org.scala-lang.modules', name: 'scala-swing_2.13', version: '3.0.0'

    // tailer
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'

    //implementation 'org.anarres:jcpp:1.4.14'

}

jar {
    manifest {
        attributes 'Main-Class': 'asm.Assembler'
    }

    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

/*
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'Assembler'
    }
    baseName = 'all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
*/
