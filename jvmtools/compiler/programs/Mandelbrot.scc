
program {

    fun main() {

/*

//ff ff 
//fe ff 
//ff fe

  uint16 xmul = $ffc7;
  uint16 xmul6 = xmul >>> 6;
  putuart(xmul6>>8)
  putuart(xmul6)
  uint16 xmul61 = xmul6 << 1;
  putuart(xmul61>>8)
  putuart(xmul61)
  uint16 xmul6t = xmul6 *2;
  putuart(xmul6t>>8)
  putuart(xmul6t)
  halt(1,1)
*/

/*
      uint16   s1 = $ffbc;
      uint16   s2 = s1 << 1;
      uint16   s3 = s1 * 2;

putuart(s2>>8)
putuart(s2)
putuart(s3>>8)
putuart(s3)
halt(9,9)
*/


        uint16 logFrom=26;
        uint16 log=0;

        uint16 X1=$00e0;
        uint16 X2=$0090;
        uint16 Y1=$00c0;
        uint16 Y2=$0060;
        uint16 LIMIT=$0100;

        //var Chr = [ ".:-=X$#@ " ];
        var Chr = [ "123456789ABCD " ];
        uint16 ITERS = 14; // number of chars in Chr

        uint16 py=0;
        while (py <= 21) {
          uint16 px=0;

          while (px <= 31) {
            uint16 x0 = ((px * X1) >>> 5) - X2;
            uint16 y0 = ((py * Y1) / 22) - Y2;


            uint16 x=0;
            uint16 y=0;
            
            uint16 i=0;
            uint16 xSqr = 0;
            uint16 ySqr = 0;

/*if (log >= logFrom) {
  putuart($aa)
  putuart(x0>>8)
  putuart(x0)
  putuart(y0>>8)
  putuart(y0)
}
*/

            while (i < ITERS) {
              xSqr = (x*x)>>>6;
              ySqr = (y*y)>>>6;

/*
if (log >= logFrom) {
  putuart($22)
  putuart(x>>8)
  putuart(x)
  putuart(xSqr>>8)
  putuart(xSqr)
  putuart(y>>8)
  putuart(y)
  putuart(ySqr>>8)
  putuart(ySqr)

  uint16 p = (xSqr + ySqr);
  putuart(p>>8)
  putuart(p)

}
*/

              uint16 sum = xSqr + ySqr;
              if (sum >= LIMIT) {
                break
              }
              if (sum < 0) {
                break
              }

              uint16 xt = xSqr - ySqr + x0;
/*
if (log >= logFrom) {
  uint16 diff = xSqr - ySqr;
  putuart($33)
  putuart(i)

  putuart(diff>>8)
  putuart(diff)
  putuart(xt>>8)
  putuart(xt)

  putuart(x>>8)
  putuart(x)
  putuart(y>>8)
  putuart(y)

  uint16 mul = x * y;
  putuart(mul>>8)
  putuart(mul)
  uint16 mul6 = mul >>> 6;
  putuart(mul6>>8)
  putuart(mul6)
  uint16 mul61 = mul6 << 1;
  putuart(mul61>>8)
  putuart(mul61)

  uint16 mul61y = mul61 + y0;
  putuart(mul61y>>8)
  putuart(mul61y)
}
*/
              y = (((x * y)>>>6) << 1) + y0; // SPAM1 BUG using << 1 doesn't produce same result as *2 - TODO MAKE THIS << and compare to c program
              x = xt;

              i = i + 1;
            }

/*
if (log == logFrom) {
  putuart($88)
  putuart(x>>8)
  putuart(x)
  putuart(xSqr>>8)
  putuart(xSqr)
  putuart(y>>8)
  putuart(y)
  putuart(ySqr>>8)
  putuart(ySqr)
  halt(99, 99)
}
*/
            i = i - 1;


            uint16 c = Chr[i];
            putuart(c)

            px = px + 1;

            log = log + 1;
          }
          py = py + 1;
          putuart('\n')
        }


    }
}

